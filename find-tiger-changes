#!/usr/bin/perl

$county = "18153";

$minlat = 38.901590;
$minlon = -87.680069;
$maxlat = 39.259463;
$maxlon = -87.219047;

@files = <2006/www2.census.gov/geo/tiger/tiger2006se/*/TGR$county.ZIP>;

open(IN, "unzip -p $files[0] TGR$county.RT1 |");
while (<IN>) {
	chomp;
	$tlid = substr($_, 5, 10);
	$tlid =~ s/^ *//;

	$startlon{$tlid} = sprintf("%.6lf", substr($_, 190, 10) / 1000000);
	$startlat{$tlid} = sprintf("%.6lf", substr($_, 200, 9) / 1000000);
	$endlon{$tlid} = sprintf("%.6lf", substr($_, 209, 10) / 1000000);
	$endlat{$tlid} = sprintf("%.6lf", substr($_, 219, 9) / 1000000);
}
close(IN);

open(IN, "unzip -p $files[0] TGR$county.RT2 |");
while (<IN>) {
	chomp;
	$tlid = substr($_, 5, 10);
	$tlid =~ s/^ *//;

	for ($i = 18; $i < 208; $i += 19) {
		$lon = substr($_, $i, 10) / 1000000;
		$lat = substr($_, $i + 10, 9) / 1000000;

		if ($lat != 0) {
			push @{$lat{$tlid}}, $lat;
			push @{$lon{$tlid}}, $lon;
		}
	}
}
close(IN);

for $tlid (keys(%startlat)) {
	unshift @{$lat{$tlid}}, $startlat{$tlid};
	unshift @{$lon{$tlid}}, $startlon{$tlid};

	push @{$lat{$tlid}}, $endlat{$tlid};
	push @{$lon{$tlid}}, $endlon{$tlid};
}

print "1 1 0 setrgbcolor\n";
print "0 setlinewidth\n";

sub out {
	my @pts = split(/ /, $_[0]);
	my $i;
	for ($i = 0; $i <= $#pts; $i++) {
		my ($lat, $lon) = split(/,/, $pts[$i]);
		printf("%.3f %.3f ",
			($lon - $minlon) * 612 / ($maxlon - $minlon),
			($lat - $minlat) * 612 / ($maxlat - $minlat));

		if ($i == 0) {
			print "moveto ";
		} else {
			print "lineto ";
		}
	}

	print "stroke\n";
}

open(IN, "java shpcat 2013/www2.census.gov/geo/tiger/TIGERrd13/EDGES/tl_rd13_${county}_edges.zip |");
while (<IN>) {
	chomp;

	($state, $county, $tlid) = split(/\|/);
	$tlid =~ s/^ *//;
	next unless $tlid =~ /^[0-9]/;

	s/.*polyline //;

	@points = split(/ /, $_);

	@lat = @{$lat{$tlid}};
	@lon = @{$lon{$tlid}};
	for ($i = 0; $i <= $#lat; $i++) {
		$old{$tlid} .= "$lat[$i],$lon[$i] ";
	}
	$old{$tlid} =~ s/ $//;

	for $p (@points) {
		($lon, $lat) = split(/,/, $p);
		$new{$tlid} .= "$lat,$lon ";
	}
	$new{$tlid} =~ s/ $//;

	if ($old{$tlid} eq "") {
		out($new{$tlid});
	}
}

for ($a = 38; $a <= 39; $a++) {
	for ($o = -87; $o <= -87; $o++) {
		open(IN, "../osm/osm/osm.$a,$o");

		while (<IN>) {
			chomp;

			$vec = $_;
			$vec =~ s/ ;.*//;
			@vec = split(/ /, $vec);

			@vlat = ();
			@vlon = ();
			@skip = ();
			for $p (@vec) {
				($lat, $lon) = split(/,/, $p);
				push @vlat, $lat;
				push @vlon, $lon;
			}

			next if (/;tiger:tlid=([^;]*)/ && ! /Sullivan, IN/);

			if (/;tiger:tlid=([^;]*)/) {
				@tlids = split(/:/, $1);

				TLID:
				for $tlid (@tlids) {
					@tlat = @{$lat{$tlid}};
					@tlon = @{$lon{$tlid}};

					next if $#tlat < 1;

					$found = -1;
					OUTER:
					for ($i = 0; $i <= $#vlat; $i++) {
						for ($j = 0; $j <= $#tlat; $j++) {
							next OUTER if abs($vlat[$i + $j] - $tlat[$j]) > .000005;
							next OUTER if abs($vlon[$i + $j] - $tlon[$j]) > .000005;
						}

						$found = $i;
						last OUTER;
					}

					if ($found >= 0) {
						print "0 0 1 setrgbcolor ";
						out($new{$tlid});

						for ($i = 0; $i < $#tlat; $i++) {
							$skip[$found + $i] = 1;
						}

						next TLID;
					}

					$found = -1;
					OUTER:
					for ($i = 0; $i <= $#vlat; $i++) {
						for ($j = 0; $j <= $#tlat; $j++) {
							next OUTER if abs($vlat[$i + $j] - $tlat[$#tlat - $j]) > .000005;
							next OUTER if abs($vlon[$i + $j] - $tlon[$#tlat - $j]) > .000005;
						}

						$found = $i;
						last OUTER;
					}

					if ($found >= 0) {
						print "0 0 1 setrgbcolor ";
						out($new{$tlid});

						for ($i = 0; $i < $#tlat; $i++) {
							$skip[$found + $i] = 1;
						}

						next TLID;
					}
				}

				print "0 1 0 setrgbcolor ";

				$within = 0;
				for ($i = 0; $i <= $#vlat; $i++) {
					printf("%.3f %.3f ",
						($vlon[$i] - $minlon) * 612 / ($maxlon - $minlon),
						($vlat[$i] - $minlat) * 612 / ($maxlat - $minlat));

					if ($within) {
						print "lineto ";
					} else {
						print "moveto ";
						$within = 1;
					}

					if ($skip[$i]) {
						if ($within) {
							print "stroke ";
							$within = 0;
						}
					}
				}

				if ($within) {
					print "stroke";
				}

				print "\n";
			} else {
				print "0 1 0 setrgbcolor ";
				out($vec);
			}
		}
	}
}
